version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cinema-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: cinema
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - cinema-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d cinema"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PgAdmin
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: cinema-pgadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@cinema.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - cinema-network

  # API NestJS
  api:
    build:
      context: ./api-cinema
      dockerfile: Dockerfile
    container_name: cinema-api-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
      - "9229:9229"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/cinema?schema=teste
      JWT_SECRET: dev-jwt-secret-key
      PORT: 3000
    networks:
      - cinema-network
    volumes:
      - ./api-cinema:/app
      - /app/node_modules
      - ./api-cinema/uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy

  # Frontend React
  frontend:
    build:
      context: ./cinema-react
      dockerfile: Dockerfile
    container_name: cinema-frontend-dev
    restart: unless-stopped
    ports:
      - "5173:5173"
    environment:
      NODE_ENV: development
      VITE_API_URL: http://localhost:3000
    depends_on:
      api:
        condition: service_started
    networks:
      - cinema-network
    volumes:
      - ./cinema-react:/app
      - /app/node_modules

networks:
  cinema-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local